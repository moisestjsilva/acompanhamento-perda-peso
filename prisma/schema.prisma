// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  profile   UserProfile?
  weightRecords WeightRecord[]
  goals     Goal[]
}

model UserProfile {
  id        String   @id @default(cuid())
  userId    String   @unique
  height    Float    // altura em cm
  initialWeight Float // peso inicial em kg
  targetWeight Float // peso alvo em kg
  birthDate DateTime?
  gender    String?  // 'male', 'female', 'other'
  activityLevel String? // 'sedentary', 'light', 'moderate', 'active', 'very_active'
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WeightRecord {
  id        String   @id @default(cuid())
  userId    String
  weight    Float    // peso em kg
  date      DateTime @default(now())
  notes     String?
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  
  @@unique([userId, date])
}

model Goal {
  id        String   @id @default(cuid())
  userId    String
  title     String
  description String?
  targetWeight Float  // peso alvo em kg
  startDate DateTime
  targetDate DateTime
  isActive  Boolean  @default(true)
  achieved  Boolean  @default(false)
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}